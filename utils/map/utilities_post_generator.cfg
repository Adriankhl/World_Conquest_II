## post generation code is quite messy right now...
## as I learned while developing, the first decorations coded are quite dirty and unefficient.
## macro organization is not perfect, as I had no clue when started how far I would go, and how I would do each task. Postgeneration utils are spread along this file, noise, and each map post-generation file
## lack of homogenic system in post-generation rutines is quite intended, to avoid pattern perception in long run from players 
## scenarios need call post generation in steps to syncronize with generate bonus and enemy castle expansion
##...so sorry for a quite hard to read code

## to reduce scenarios consuming resources, some very used utilities are defined as core events
#define WORLD_CONQUEST_TEK_MAP_UTILITY_EVENTS
{WCT_FRACTION_REPLACE_EVENT}
#{WCT_FRACTION_LAYER_REPLACE_EVENT}
{WCT_VOLCANOS_EVENT}
{WCT_VOLCANOS_DIRT_EVENT}
#enddef

#define WCT_FRACTION_LAYER_REPLACE FACTOR TERRAIN LAYER
{SHUFFLE_ARRAY terrain_to_change}
{REPEAT_IT "$($terrain_to_change.length/{FACTOR})" change_i}
    {VARIABLE_OP terrain_to_change.change rand {TERRAIN}}
    [terrain]
        x=$terrain_to_change[$change_i].x
        y=$terrain_to_change[$change_i].y
        terrain=$terrain_to_change.change
        layer={LAYER}
    [/terrain]
{NEXT change_i}
#enddef

#define WCT_FRACTION_REPLACE FACTOR TERRAIN
{VARIABLE change.times "$($terrain_to_change.length/{FACTOR})"}
{VARIABLE change.terrain "{TERRAIN}"}
[fire_event]
    name=wct_fraction_replace
[/fire_event]
#enddef

#define WCT_FRACTION_REPLACE_EVENT
[event]
    name=wct_fraction_replace
    first_time_only=no
    {SHUFFLE_ARRAY terrain_to_change}
    {REPEAT_IT $change.times change_i}
        {VARIABLE_OP change.pick rand $change.terrain}
        [terrain]
            x=$terrain_to_change[$change_i].x
            y=$terrain_to_change[$change_i].y
            terrain=$change.pick
        [/terrain]
    {NEXT change_i}
    {CLEAR_VARIABLE change}
[/event]
#enddef

## bug in BfW 1.12.1 with variable substituion in layer=
##define D_WCT_FRACTION_LAYER_REPLACE FACTOR TERRAIN LAYER
#{VARIABLE change.times "$($terrain_to_change.length/{FACTOR})"}
#{VARIABLE change.terrain {TERRAIN}}
#{VARIABLE change.layer {LAYER}}
#[fire_event]
#    name=wct_fraction_layer_replace
#[/fire_event]
##enddef

##define D_WCT_FRACTION_LAYER_REPLACE_EVENT
#[event]
#    name=wct_fraction_layer_replace
#    first_time_only=no
#    {SHUFFLE_ARRAY terrain_to_change}
#    {REPEAT_IT $change.times change_i}
#        {VARIABLE_OP change.pick rand $change.terrain}
#        [terrain]
#            x=$terrain_to_change[$change_i].x
#            y=$terrain_to_change[$change_i].y
#            terrain=$change.pick
#            layer=$change.layer
#        [/terrain]
#    {NEXT change_i}
#    {CLEAR_VARIABLE change}
#[/event]
##enddef

#define WCT_VOLCANOS
[fire_event]
    name=wct_volcanos
[/fire_event]
#enddef

#define WCT_VOLCANOS_EVENT
[event]
    name=wct_volcanos
    #first_time_only=no
    [terrain]
        terrain=Mv
        [and]
            terrain=Ql,Qlf
            [filter_adjacent_location]
                terrain=M*,M*^Xm,X*
                count=3
                adjacent=se,s,sw
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    [terrain]
        terrain=Md^Xm
        [and]
            terrain=X*,M*^Xm
            [filter_adjacent_location]
                terrain=Mv
                adjacent=n,ne,nw
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    [terrain]
        terrain=Md
        [and]
            terrain=Ms,Mm
            [filter_adjacent_location]
                terrain=Mv
                adjacent=n,ne,nw
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    [store_locations]
        terrain=Mv
        variable=terrain_to_change
    [/store_locations]
    {FOREACH terrain_to_change volcano_i}
        [sound_source]
            id=volcano$volcano_i
            sounds=rumble.ogg
            delay=55000
            chance=1
            x=$terrain_to_change[$volcano_i].x
            y=$terrain_to_change[$volcano_i].y
            full_range=5
            fade_range=5
            loop=0
        [/sound_source]
    {NEXT volcano_i}
[/event]
#enddef

#define WCT_VOLCANOS_DIRT
[fire_event]
    name=wct_volcanos_dirt
[/fire_event]
#enddef

#define WCT_VOLCANOS_DIRT_EVENT
[event]
    name=wct_volcanos_dirt
    #first_time_only=no
    [store_locations]
        terrain=Hh,Hd,Hhd
        [and]
            terrain=Mv
            radius=3
        [/and]
        variable=terrain_to_change
    [/store_locations]
    {WCT_FRACTION_LAYER_REPLACE 3 *^Dr overlay}
    [store_locations]
        terrain=Ds,Dd
        [and]
            terrain=Mv
            radius=4
        [/and]
        variable=terrain_to_change
    [/store_locations]
    {WCT_FRACTION_REPLACE 2 Dd^Dc}
[/event]
#enddef

#define WCT_DIRT_BEACHS RNG_RANGE
[store_locations]
    terrain=Ds
    [filter_adjacent_location]
        terrain=Ww*,Wo*
    [/filter_adjacent_location]
    variable=terrain_to_change
[/store_locations]
{RANDOM {RNG_RANGE}}
{WCT_FRACTION_REPLACE $random Ds^Esd}
#enddef

## pack of generic tweaks to default generator
#define WORLD_CONQUEST_TEK_MAP_REBUILD CAVE_TERRAIN REEF_FACTOR REEF_EXTRA HILL MUSHROOMS
{WCT_REDUCE_WALL_CLUSTERS {CAVE_TERRAIN}}
{WCT_FILL_LAVA_CHASMS}
## add underwater ground based on volcanic activity
[store_locations]
    terrain=Ql,Qxu
    variable=terrain_to_change
[/store_locations]
{VARIABLE random $terrain_to_change.length}
{VARIABLE_OP random add {REEF_EXTRA}}
{VARIABLE_OP random multiply {REEF_FACTOR}}
[store_locations]
    terrain=Wo
    [filter_adjacent_location]
        terrain=!,Wo
        count=2-6
    [/filter_adjacent_location]
    variable=terrain_to_change
[/store_locations]
{REPEAT_IT $random coast_i}
    {VARIABLE_OP rand rand 0.."$($terrain_to_change.length-1)"}
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Ww
    [/terrain]
{NEXT coast_i}
## add reefs based on volcanic activity
[store_locations]
    terrain=Ql
    variable=terrain_to_change
[/store_locations]
{VARIABLE random $terrain_to_change.length}
{VARIABLE_OP random add {REEF_EXTRA}}
{VARIABLE_OP random multiply {REEF_FACTOR}}
[store_locations]
    terrain=Ww
    [and]
        terrain=Wo
        radius=3
    [/and]
    variable=terrain_to_change
[/store_locations]
{REPEAT_IT $random reef_i}
    {VARIABLE_OP rand rand 0.."$($terrain_to_change.length-1)"}
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Wwr
    [/terrain]
{NEXT reef_i}
{CLEAR_VARIABLE extra_reef}
{WCT_VOLCANOS}
{WCT_EXPAND_SNOW}
## replace hills for mushrooms
[store_locations]
    terrain={HILL}
    [and]
        [filter_adjacent_location]
            terrain={HILL}
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Mm,Md,Xu,Mm^Xm,Uu,Uh,Uu^Uf,Ql,Qxu,Mv
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Aa^*,Ai,Ms*^*,Ha^*
            count=0
        [/filter_adjacent_location]
    [/and]
    variable=terrain_to_change
[/store_locations]
{RANDOM 0.19}
[if]
    ## even when is more balanced, break sometimes the pattern
    {VARIABLE_CONDITIONAL random equals 0}
[then]
    [store_locations]
        terrain={HILL}
        variable=terrain_to_change
    [/store_locations]
[/then]
[/if]
{SHUFFLE_ARRAY terrain_to_change}
{REPEAT_IT {MUSHROOMS} mush_i}
    [if]
        [variable]
            name=terrain_to_change.length
            greater_than=$mush_i
        [/variable]
    [then]
        [terrain]
            x=$terrain_to_change[$mush_i].x
            y=$terrain_to_change[$mush_i].y
            terrain=Hh^Uf
        [/terrain]
    [/then]
    [/if]
{NEXT mush_i}
{CLEAR_VARIABLE mushrooms}
#enddef

#define WORLD_CONQUEST_TEK_MAP_DIRT MUSHROOMS
## muddy swamps almost surrounded by sand
{WCT_STORE_POSSIBLE_MUDDY_SWAMPS}
[while]
    [variable]
        name=terrain_to_change.length
        greater_than=0
    [/variable]
[do]
    [terrain]
        terrain=Sm
        find_in=terrain_to_change
    [/terrain]
    {WCT_STORE_POSSIBLE_MUDDY_SWAMPS}
[/do]
[/while]
{WCT_RANDOMIZE_SNOWED_FOREST}
{WCT_VOLCANOS_DIRT}
## volcanos dry mountains
[terrain]
    terrain=Md
    layer=base
    [and]
        terrain=Mm^*
        [and]
            terrain=Mv
            radius=2
        [/and]
    [/and]
[/terrain]
## lava dry mountains
[terrain]
    terrain=Md
    layer=base
    [and]
        terrain=Mm*^*
        [and]
            terrain=Ql
            radius=1
        [/and]
    [/and]
[/terrain]
## some impassible become mushrooms
[store_locations]
    terrain=Mm^Xm,Md^Xm
    [filter_adjacent_location]
        terrain=Ql,Mv
        count=0
    [/filter_adjacent_location]
    variable=terrain_to_change
[/store_locations]
{RANDOM 9..11}
{WCT_FRACTION_REPLACE $random {MUSHROOMS}}
{WCT_DIRT_BEACHS 9..11}
{CLEAR_VARIABLE rand}
#enddef

#define WCT_REDUCE_WALL_CLUSTERS CAVE_TERRAIN
[store_locations]
    terrain=Xu
    [and]
        [filter_adjacent_location]
            terrain=Xu,M*^Xm
            count=3-6
        [/filter_adjacent_location]
    [/and]
    variable=terrain_to_change
[/store_locations]
{FOREACH terrain_to_change change_i}
    {RANDOM {CAVE_TERRAIN}}   
    [terrain]
        x=$terrain_to_change[$change_i].x
        y=$terrain_to_change[$change_i].y
        terrain=$random
    [/terrain]
{NEXT change_i}
#enddef

#define WCT_RANDOMIZE_SNOWED_FOREST
[store_locations]
    terrain=Aa^F*,Ha^F*
    variable=terrain_to_change
[/store_locations]
{FOREACH terrain_to_change i}
    {RANDOM Aa^Fpa,Aa^Fda,Aa^Fma}
    [terrain]
        x=$terrain_to_change[$i].x
        y=$terrain_to_change[$i].y
        terrain=$random
        layer=overlay
    [/terrain]
{NEXT i}
#enddef

#define WCT_EXPAND_SNOW
## expands snow to mountains, hills and villages
## it has little gameplay impact, mostly for decoration
## created to fix weird snow configuration in default generator
[terrain]
    terrain=Ms^Vhha
    [and]
        terrain=Mm^Vhh
        [filter_adjacent_location]
            terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Ms
    [and]
        terrain=Mm
        [filter_adjacent_location]
            terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Mv
            count=0
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Ha^Vhha
    [and]
        terrain=Hh^Vhh
        [filter_adjacent_location]
            terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
            count=2-6
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Cha
    [and]
        terrain=Ch
        [filter_adjacent_location]
            terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
            count=2-6
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Kha
    [and]
        terrain=Kh
        [filter_adjacent_location]
            terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
            count=2-6
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Ha^Fpa
    [and]
        terrain=Hh^F*
        [filter_adjacent_location]
            terrain=Aa^V*,Ha^V*,Kha,Cha
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Ha
    [and]
        terrain=Hh
        [filter_adjacent_location]
            terrain=Aa^V*,Ha^V*,Kha,Cha
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Ha
    [and]
        terrain=Hh
        [filter_adjacent_location]
            terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
            count=2-6
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Ha^Fpa
    [and]
        terrain=Hh^F*
        [filter_adjacent_location]
            terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
            count=2-6
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Ms
    [and]
        terrain=Mm
        [filter_adjacent_location]
            terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Mv
            count=0
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Aa^Vea
    [and]
        terrain=G*^Ve,G*^Vd
        [filter_adjacent_location]
            terrain=Ms*^*,Ha^*,Kha,Cha
            count=2-6
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Aa^Voa
    [and]
        terrain=G*^Vo
        [filter_adjacent_location]
            terrain=Ms*^*,Ha^*,Kha,Cha
            count=2-6
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Aa^Vla
    [and]
        terrain=G*^Vl
        [filter_adjacent_location]
            terrain=Ms*^*,Ha^*,Kha,Cha
            count=2-6
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Aa^Vha
    [and]
        terrain=G*^V*
        [filter_adjacent_location]
            terrain=Ms*^*,Ha^*,Kha,Cha
            count=2-6
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Aa^Vhca
    [and]
        terrain=Rr^V*
        [filter_adjacent_location]
            terrain=Ms*^*,Ha^*,Kha,Cha
            count=2-6
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Ha^Voa
    [and]
        terrain=H*^V*
        [filter_adjacent_location]
            terrain=Ms*^*,Ha^*,Kha,Cha
            count=2-6
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Ms^Vhha
    [and]
        terrain=Mm^Vhh
        [filter_adjacent_location]
            terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Ha^Uf
    [and]
        terrain=Hh^Uf
        [filter_adjacent_location]
            terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
            count=3-6
        [/filter_adjacent_location]
    [/and]
[/terrain]
[terrain]
    terrain=Ms^Xm
    [and]
        terrain=Mm^Xm
        [filter_adjacent_location]
            terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Mv
            count=0
        [/filter_adjacent_location]
    [/and]
[/terrain]
## chances of expand ice
{RANDOM 0..19}
[if]
    {VARIABLE_CONDITIONAL random equals 0}
[then]
    {RANDOM 1..3}
    [terrain]
        terrain=Ai
        [and]
            terrain=Ww,Wo
            [filter_adjacent_location]
                terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
                count=$random-6
            [/filter_adjacent_location]
        [/and]
        variable=terrain_to_change
    [/terrain]
[/then]
[/if]
{RANDOM 0..19}
[if]
    {VARIABLE_CONDITIONAL random equals 0}
[then]
    {RANDOM 4..5}
    [store_locations]
        terrain=Aa
        [and]
            [filter_adjacent_location]
                terrain=Aa^*,Ai,Ms*^*,Ha^*,Kha,Cha
                count=$random-6
            [/filter_adjacent_location]
        [/and]
        variable=terrain_to_change
    [/store_locations]
    {RANDOM 1..3}
    {WCT_FRACTION_REPLACE $random Ai}
[/then]
[/if]
#enddef

#define WCT_FILL_LAVA_CHASMS
[terrain]
    terrain=Ql
    layer=base
    [and]
        terrain=Qxu^*
        [and]
            terrain=Ql^*
            radius=999
            [filter_radius]
                terrain=Ql^*,Qxu^*
            [/filter_radius]
        [/and]
    [/and]
[/terrain]
#enddef

#define WCT_CHANGE_MAP_WATER TYPE
[terrain]
    terrain=Ww{TYPE}
    layer=base
    [and]
        terrain=Ww^*
    [/and]
[/terrain]
[terrain]
    terrain=Wwr{TYPE}
    [and]
        terrain=Wwr
    [/and]
[/terrain]
[terrain]
    terrain=Wo{TYPE}
    [and]
        terrain=Wo
    [/and]
[/terrain]
#enddef

#define WCT_MAP_FILTER_OCEANIC
terrain=Wo*
x=1
radius=999
[filter_radius]
    terrain=W*^V*,Wwr*,Ww,Wwg,Wwt,Wo*
    [filter_adjacent_location]
        terrain=!,W*^*,S*^*,D*^*,Ai
        count=0-3
    [/filter_adjacent_location]
[/filter_radius]
[or]
    terrain=Wo*
    y=1
    radius=999
    [filter_radius]
        terrain=W*^V*,Wwr*,Ww,Wwg,Wwt,Wo*
        [filter_adjacent_location]
            terrain=!,W*^*,S*^*,Ai
            count=0-3
        [/filter_adjacent_location]
    [/filter_radius]
[/or]
#enddef

#define WCT_MAP_DECORATIVE_DOCKS
[store_locations]
    terrain=Ww
        [filter_adjacent_location]
            terrain=Ds,C*,K*
            adjacent=ne,sw
            [filter_adjacent_location]
                terrain=G*^V*,D*^V*,H*^V*,C*,K*
            [/filter_adjacent_location]
        [/filter_adjacent_location]
        [filter_adjacent_location]
            terrain=Ww,Wo,Wwr
            adjacent=ne,sw
        [/filter_adjacent_location]
    variable=terrain_to_change
[/store_locations]
{RANDOM 4..8}
{WCT_FRACTION_REPLACE $random Ww^Bw/}
[store_locations]
    terrain=Ww
    [filter_adjacent_location]
        terrain=Ds,C*,K*
        adjacent=nw,se
        [filter_adjacent_location]
            terrain=G*^V*,D*^V*,H*^V*,C*,K*
        [/filter_adjacent_location]
    [/filter_adjacent_location]
    [filter_adjacent_location]
        terrain=Ww,Wo,Wwr
        adjacent=nw,se
    [/filter_adjacent_location]
    [filter_adjacent_location]
        terrain=*^B*
        count=0
    [/filter_adjacent_location]
    variable=terrain_to_change
[/store_locations]
{RANDOM 3..7}
{WCT_FRACTION_REPLACE $random Ww^Bw\}
## chance of trash near docks
[store_locations]
    terrain=Ds
    [filter_adjacent_location]
        terrain=*^B*
    [/filter_adjacent_location]
    [filter_adjacent_location]
        terrain=C*^*,K*^*,*^V*
    [/filter_adjacent_location]
    variable=terrain_to_change
[/store_locations]
{RANDOM 1..2}
{WCT_FRACTION_REPLACE $random Ds^Edt,Ds^Edt,Ds^Esd,Ds}
{RANDOM 0..1}
[if]
    {VARIABLE_CONDITIONAL random equals 1}
[then]
    [terrain]
        terrain=Ds^Edt
        [and]
            terrain=Ds
            [filter_adjacent_location]
                terrain=Ds^Edt
            [/filter_adjacent_location]
        [/and]
    [/terrain]
[/then]
[/if]
#enddef

#define WCT_STORE_POSSIBLE_ENCAMPMENT_FORD
[store_locations]
    terrain=Ww
    [filter_adjacent_location]
        terrain=Ce,*^V*
    [/filter_adjacent_location]
    [filter_adjacent_location]
        terrain=W*^B*,Wo
        count=0
    [/filter_adjacent_location]
    variable=terrain_to_change
[/store_locations]
{RANDOM 0..1}
#enddef

#define WCT_STORE_POSSIBLE_FLOWERS TERRAIN
[store_locations]
    terrain=Gs,Gg
    [filter_adjacent_location]
        terrain={TERRAIN}
    [/filter_adjacent_location]
    [filter_adjacent_location]
        terrain=D*^*,S*^*,Hd
        count=0
    [/filter_adjacent_location]
    variable=terrain_to_change
[/store_locations]
{RANDOM 0..9}
#enddef

#define WCT_STORE_POSSIBLE_MAP4_CASTLE VALUE
[store_locations]
    terrain=H*^F*
    [filter_adjacent_location]
        terrain=H*^F*
        count=6
    [/filter_adjacent_location]
    variable=terrain_to_change
[/store_locations]
{RANDOM 0..{VALUE}}
#enddef

#define WCT_POSSIBLE_MAP4_CASTLE TERRAIN VALUE
{WCT_STORE_POSSIBLE_MAP4_CASTLE {VALUE}}
[while]
    [variable]
        name=terrain_to_change.length
        greater_than=0
    [/variable]
    [variable]
        name=random
        equals=0
    [/variable]
[do]
    {SHUFFLE_ARRAY terrain_to_change}
    [terrain]
        terrain={TERRAIN}
        x=$terrain_to_change.x
        y=$terrain_to_change.y
    [/terrain]
    {WCT_STORE_POSSIBLE_MAP4_CASTLE {VALUE}}
[/do]
[/while]
#enddef

#define WCT_STORE_POSSIBLE_DWARVEN_CASTLE
[store_locations]
    terrain=Uh
    [filter_adjacent_location]
        terrain=Uh
        count=5-6
    [/filter_adjacent_location]
    variable=terrain_to_change
[/store_locations]
{RANDOM 0..1}
#enddef

#define WCT_STORE_POSSIBLE_ROADS VILLAGE
[store_locations]
    terrain=Gg,Gs
    [filter_adjacent_location]
        terrain={VILLAGE}
        [filter_adjacent_location]
            terrain=R*,Ch*,Kh*
            count=0
        [/filter_adjacent_location]
    [/filter_adjacent_location]
    [filter_adjacent_location]
        terrain=R*,Kh*,Ch*
    [/filter_adjacent_location]
    variable=terrain_to_change
[/store_locations]
#enddef

#define WCT_ROAD_TO_VILLAGE ROAD VILLAGE
## build roads of 1 hex to conect villages
{WCT_STORE_POSSIBLE_ROADS {VILLAGE}}
[while]
    [variable]
        name=terrain_to_change.length
        greater_than=0
    [/variable]
[do]
    [terrain]
        terrain={ROAD}
        x,y=$terrain_to_change.x,$terrain_to_change.y
    [/terrain]
    {WCT_STORE_POSSIBLE_ROADS {VILLAGE}}
[/do]
[/while]
#enddef

#define WCT_CREATE_EVENT_ROADS_TO DESTINY TERRAIN
[event]
    name=wct_roads_to_{DESTINY}
    first_time_only=no
    [fire_event]
        name=wct_store_roads_{DESTINY}
    [/fire_event]
    [while]
        [variable]
            name=terrain_to_change.length
            greater_than=0
        [/variable]
    [do]
        [terrain]
            terrain={TERRAIN}
            x,y=$terrain_to_change.x,$terrain_to_change.y
        [/terrain]
        [fire_event]
            name=wct_store_roads_{DESTINY}
        [/fire_event]
    [/do]
    [/while]
[/event]
#enddef

#define WCT_ITERATE_ROADS_TO DESTINY RADIUS
{VARIABLE radius {RADIUS}}
[while]
    [variable]
        name=radius
        greater_than=0
    [/variable]
[do]
    [fire_event]
        name=wct_roads_to_{DESTINY}
    [/fire_event]
    {VARIABLE_OP radius add -1}
[/do]
[/while]
{CLEAR_VARIABLE radius}
#enddef

#define WCT_STORE_POSSIBLE_MUDDY_SWAMPS
[store_locations]
    terrain=Ss
    [filter_adjacent_location]
        terrain=D*^*,Hd,Sm,Rd
        count=5-6
    [/filter_adjacent_location]
    variable=terrain_to_change
[/store_locations]
#enddef

#define WCT_STORM SNOW
{REPEAT_IT {SNOW} snow_i}
    {VARIABLE_OP rand rand 0.."$($terrain_to_change.length-1)"}
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Ai
        [and]
            terrain=Aa
        [/and]
    [/terrain]
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Ha^Voa
        [and]
            terrain=Hh^V*
        [/and]
    [/terrain]
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Ha
        [and]
            terrain=Hh
        [/and]
    [/terrain]
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Ms^Vhha
        [and]
            terrain=Mm^V*
        [/and]
    [/terrain]
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Ms
        [and]
            terrain=Mm
            [filter_adjacent_location]
                terrain=Mv
                count=0
            [/filter_adjacent_location]
        [/and]
    [/terrain]
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Aa^Vea
        [and]
            terrain=G*^Ve,G*^Vd
        [/and]
    [/terrain]
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Aa^Vha
        [and]
            terrain=G*^V*
        [/and]
    [/terrain]
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Aa^Vhca
        [and]
            terrain=R*^V*
        [/and]
    [/terrain]
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Aa^Fpa
        [and]
            terrain=G*^F*
        [/and]
    [/terrain]
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Ha^Fpa
        [and]
            terrain=H*^F*
        [/and]
    [/terrain]
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Aa
        [and]
            terrain=G*,R*
        [/and]
    [/terrain]
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Cha
        [and]
            terrain=Ch
        [/and]
    [/terrain]
    [terrain]
        x=$terrain_to_change[$rand].x
        y=$terrain_to_change[$rand].y
        terrain=Kha
        layer=base
        [and]
            terrain=Kh*^*
        [/and]
    [/terrain]
{NEXT snow_i}
{CLEAR_VARIABLE rand}
#enddef

#define WCT_MAP_CAVE_PATH_TO TERRAIN
[terrain]
    terrain={TERRAIN}
    [and]
        terrain=Ur
    [/and]
[/terrain]
#enddef