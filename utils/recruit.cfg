#define WORLD_CONQUEST_TEK_RECRUIT_EVENTS
{WORLD_CONQUEST_TEK_CREATE_HERO}
{WORLD_CONQUEST_TEK_RECRUITS_MODIFICATION}
{WORLD_CONQUEST_TEK_PROMOTE_COMMANDER}
#enddef

#define WCT_RECRUIT_EXPERIENCE_PENALTY
duration=forever
[effect]
    apply_to=max_experience
    increase=$difficulty.experience_penalty|%
[/effect]
#enddef

#define WORLD_CONQUEST_TEK_RECRUIT_START_UNITS
{FOREACH_FROM player 1 side_i}
    ## apply unit modifications to leaders
    [object]
        [filter]
            side=$side_i
        [/filter]
        silent=yes
        {WCT_RECRUIT_EXPERIENCE_PENALTY}
    [/object]
    [fire_event]
        name=wct_help_multipath
        [primary_unit]
            side=$side_i
        [/primary_unit]
    [/fire_event]
    ## create starting heroes
    [store_unit]
        variable=unit
        [filter]
            side=$side_i
        [/filter]
    [/store_unit]
    {REPEAT_IT $difficulty.heroes hero_i}
        {RANDOM 0.."$($player[$side_i].deserter.length-1)"}
        {WCT_RECRUIT_HERO $player[$side_i].deserter[$random].type hero}
        {CLEAR_VARIABLE player[$side_i].deserter[$random]}
    {NEXT hero_i}
    {CLEAR_VARIABLE unit}   
{NEXT side_i}
#enddef

#define WCT_RECRUIT_HERO TYPE ROLE
{VARIABLE wct.hero.type {TYPE}}
{VARIABLE wct.hero.role {ROLE}}
[fire_event]
    name=wct_hero
    [primary_unit]
        id=$unit.id
    [/primary_unit]
[/fire_event]
#enddef

#define WORLD_CONQUEST_TEK_CREATE_HERO
[event]
    name=wct_hero
    first_time_only=no
    ## find out hero extra trait if has any
    {VARIABLE wct.hero.trait 0}
    {FOREACH_FROM wct.hero.trait_extra 1 trait_i}
        [if]
            [variable]
                name=wct.hero.trait_extra[$trait_i].types
                contains="$wct.hero.type"
            [/variable]
        [then]
            {VARIABLE wct.hero.trait $trait_i}
        [/then]
        [/if]	
    {NEXT trait_i}
    ## give appropriate ovelay
    {VARIABLE wct.hero.overlays ""}
    [if]
        {VARIABLE_CONDITIONAL wct.hero.role equals commander}
    [then]
        {VARIABLE wct.hero.overlays "misc/leader-expendable.png"}
    [/then]
    [else]
        {VARIABLE wct.hero.overlays "misc/hero-icon.png"}
    [/else]
    [/if]
    [unit]
        side=$unit.side
        type=$wct.hero.type
        x,y=$unit.x,$unit.y
        placement=map_passable
        generate_name=yes
        overlays=$wct.hero.overlays
        role=$wct.hero.role
        [modifications]
            {WORLD_CONQUEST_II_TRAIT_HEROIC}
            [insert_tag]
                name=trait
                variable=wct.hero.trait_extra[$wct.hero.trait].trait
            [/insert_tag]
            [object]
                {WCT_RECRUIT_EXPERIENCE_PENALTY}
            [/object]
        [/modifications]
        [insert_tag]
            name=event
            variable=wct.hero.trait_extra[$wct.hero.trait].event
        [/insert_tag]
        [variables]
            just_created=yes ##used and cleared by multipath
        [/variables]
    [/unit]
    [fire_event]
        name=wct_help_multipath
        [primary_unit]
            [filter_wml]
                [variables]
                    just_created=yes
                [/variables]
            [/filter_wml]
        [/primary_unit]
    [/fire_event]
[/event]
#enddef

#define WORLD_CONQUEST_TEK_RECRUITS_MODIFICATION
[event]
    name=recruit
    first_time_only=no
    [filter]
        side=1,2,3
    [/filter]
    [object]
        [filter]
            x,y=$unit.x,$unit.y
        [/filter]
        silent=yes
        {WCT_RECRUIT_EXPERIENCE_PENALTY}
    [/object]
    [store_unit]
        variable=unit
        [filter]
            x,y=$unit.x,$unit.y
        [/filter]
    [/store_unit]
    {WORLD_CONQUEST_TEK_TRAIN player[$side_number]}
[/event]
#enddef

#define WORLD_CONQUEST_TEK_PROMOTE_COMMANDER
[event]
    name=die
    first_time_only=no
    ## promote a commander upon leader death
    [filter]
        canrecruit="yes"
    [/filter]
    [store_unit]
        variable=candidates
        [filter]
            side=$unit.side
            role=commander
            canrecruit="no"
        [/filter]
    [/store_unit]
    [if]
        [variable]
            name=candidates.length
            greater_than=0
        [/variable]
    [then]
        {VARIABLE candidates.canrecruit yes}
        {VARIABLE candidates.overlays ""}
        [unstore_unit]
            variable=candidates[0]
        [/unstore_unit]
        [message]
            id=$candidates.id
            message= {STR_PROMOTION}
        [/message]
    [/then]
    ## players lose game if any leader without commander die
    [else]
        [if]
            {VARIABLE_CONDITIONAL unit.side less_than 4}
        [then]
            [message]
                side=1,2,3
                message= {STR_DEFEAT}
            [/message]
            [endlevel]
                result=defeat
            [/endlevel]
        [/then]
        [/if]
    [/else]
    [/if]
    {CLEAR_VARIABLE candidates}
[/event]
#enddef

############################################################
## recall events become core after load scenario 1
#define WORLD_CONQUEST_TEK_RECALL_EVENTS
[set_variables]
    name=core.event
    mode=insert
    {WORLD_CONQUEST_TEK_RECRUIT_LIST_RESTORE}
    {WORLD_CONQUEST_TEK_RECALL_LIST_RESTORE}
    {WORLD_CONQUEST_TEK_AUTO_RECALLS}
    {WORLD_CONQUEST_TEK_RECALL}
[/set_variables]
#enddef

#define WORLD_CONQUEST_TEK_RECRUIT_LIST_STORE
{FOREACH_FROM player 1 side_i}
    [store_side]
        side=$side_i
    [/store_side]
    {VARIABLE player[$side_i].recruit $side.recruit}
{NEXT side_i}
{CLEAR_VARIABLE side}
#enddef

#define WORLD_CONQUEST_TEK_RECRUIT_LIST_RESTORE
[literal]
    name=prestart
    {FOREACH_FROM player 1 side_i}
        [set_recruit]
            side=$side_i
            recruit=$player[$side_i].recruit
        [/set_recruit]
    {NEXT side_i}
[/literal]
#enddef

#define WORLD_CONQUEST_TEK_RECALL_LIST_STORE
[store_unit]
    variable=wct.recall
    [filter]
        side=1,2,3
    [/filter]
[/store_unit]
#enddef

#define WORLD_CONQUEST_TEK_RECALL_LIST_RESTORE
[literal]
    name=prestart
    {FOREACH wct.recall unit_i}
        {VARIABLE wct.recall[$unit_i].status.poisoned no}
        {VARIABLE wct.recall[$unit_i].status.slowed no}
        {VARIABLE wct.recall[$unit_i].goto_x 0}
        {VARIABLE wct.recall[$unit_i].goto_y 0}
        ## rename with recall cost
        [if]
            [variable]
                name=wct.recall[$unit_i].canrecruit
                not_equals=yes
            [/variable]
            [variable]
                name=wct.recall[$unit_i].variables.cost_name
                not_equals=yes
            [/variable]
        [then]
            {VARIABLE wct.recall[$unit_i].variables.name $wct.recall[$unit_i].name}
            {WORLD_CONQUEST_TEK_RECALL_COST wct.recall[$unit_i]}
            {VARIABLE wct.recall[$unit_i].name "$wct.recall[$unit_i].variables.wct_recall_cost "+{STR_GOLD}+"
$wct.recall[$unit_i].name"}
            {VARIABLE wct.recall[$unit_i].variables.cost_name yes}
        [/then]
        [/if]	
        [unstore_unit]
            variable=wct.recall[$unit_i]
            x,y=recall
        [/unstore_unit]
    {NEXT unit_i}
    {CLEAR_VARIABLE wct.recall}
    ## get the true leader back from recall list
    {FOREACH_FROM player 1 side_i}
        [store_starting_location]
            variable=startpos
            side=$side_i
        [/store_starting_location]
        [recall]
            canrecruit=yes
            x,y=$startpos.x,$startpos.y
            side=$side_i
            show=no
        [/recall]
    {NEXT side_i}
    {CLEAR_VARIABLE startpos}
[/literal]
#enddef

#define WORLD_CONQUEST_TEK_RECALL_COST UNIT
[if]
    {VARIABLE_CONDITIONAL {UNIT}.cost less_than 17}
[then]
    {VARIABLE {UNIT}.variables.wct_recall_cost "$(${UNIT}.cost+3)"}
[/then]
[else]
    {VARIABLE {UNIT}.variables.wct_recall_cost 20}
[/else]
[/if]
#enddef

#define WORLD_CONQUEST_TEK_AUTO_RECALLS
[literal]
    name=start
    ## players get recalled by free all heroes up to castle size
    {FOREACH_FROM player 1 side_i}
        [store_locations]
            variable=candidates
            terrain=C*
            [and]
                radius=3
                [filter_radius]
                    terrain=C*,K*
                [/filter_radius]
                [filter]
                    side=$side_i
                    canrecruit=yes
                [/filter]	
            [/and]
        [/store_locations]
        {FOREACH candidates point_i}
            [recall]
                x,y=$candidates[$point_i].x
                y=$candidates[$point_i].y
                side=$side_i
                [filter_wml]
                    [modifications]
                        [trait]
                            [effect]
                                apply_to=loyal
                            [/effect]
                        [/trait]
                    [/modifications]
                [/filter_wml]
                show=no
            [/recall]
            ## remove cost from name
            [store_unit]
                [filter]
                    x,y=$candidates[$point_i].x
                    y=$candidates[$point_i].y
                [/filter]
                variable=unit
            [/store_unit]
            {VARIABLE unit.name $unit.variables.name}
            {VARIABLE unit.variables.cost_name no}
            [unstore_unit]
                variable=unit
            [/unstore_unit]
            {CLEAR_VARIABLE unit}
        {NEXT point_i}
        {CLEAR_VARIABLE candidates}
    {NEXT side_i}
[/literal]
#enddef

#define WCT_RECALL_GOLD_LIMIT
    11 #enddef

#define WORLD_CONQUEST_TEK_RECALL
## check unit recall cost with player gold, and discount gold or stop recall if neccessary
[literal]
    name=recall
    first_time_only=no
    [filter_side]
        side=1,2,3
    [/filter_side]
    [store_gold]
        side=$side_number
    [/store_gold]
    {VARIABLE_OP gold add {WCT_RECALL_GOLD_LIMIT}}
    [if]
        [variable]
            name=unit.variables.wct_recall_cost
            greater_than=$gold
        [/variable]
    [then]
        [kill]
            x,y=$unit.x,$unit.y
        [/kill]	
        [message]
            speaker=narrator
            side_for=$side_number
            message= {STR_EXPENSIVE_RECALL}
        [/message]	
        [unstore_unit]
            variable=unit
            x,y=recall
        [/unstore_unit]
    [/then]
    [else]
        ## restore unit name on recall
        {VARIABLE unit.name $unit.variables.name}
        {VARIABLE unit.variables.cost_name no}
        [unstore_unit]
            variable=unit
        [/unstore_unit]
        [gold]
            side=$side_number
            amount=-$unit.variables.wct_recall_cost
        [/gold]
    [/else]
    [/if]
    [gold]
        side=$side_number
        amount={WCT_RECALL_GOLD_LIMIT}
    [/gold]
    {CLEAR_VARIABLE gold}	
[/literal]
#enddef


