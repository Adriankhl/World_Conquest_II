#define WORLD_CONQUEST_TEK_BONUS_EVENTS
{WORLD_CONQUEST_TEK_BONUS_HERO_FOUND}
{WORLD_CONQUEST_TEK_BONUS_PICKUP_POINT}
{WORLD_CONQUEST_TEK_BONUS_GENERATE_POINTS_EVENT}
{WORLD_CONQUEST_TEK_BONUS_RESET}
#enddef

#define WCT_BONUS_FIGURE_OUT_POINT POINT_ARRAY X Y VAR
{FOREACH {POINT_ARRAY}.point point_i}
    [if]
        [variable]
            name={POINT_ARRAY}.point[$point_i].x
            equals={X}
        [/variable]
        [variable]
            name={POINT_ARRAY}.point[$point_i].y
            equals={Y}
        [/variable]
    [then]
        {VARIABLE {VAR} $point_i}
    [/then]
    [/if]
{NEXT point_i}
#enddef

#define WORLD_CONQUEST_TEK_BONUS_RESET
[event]
    name=victory
    {FOREACH bonus.point point_i}
        {VARIABLE bonus.point[$point_i].x 1}
        {VARIABLE bonus.point[$point_i].y 1}
    {NEXT point_i}
    {CLEAR_VARIABLE bonus.theme}
[/event]
#enddef

#define WCT_FOUND_HERO TYPE
{WCT_RECRUIT_HERO {TYPE} found unit}
[fire_event]
    name=wct_bonus_hero_found
    [primary_unit]
        id=$unit.id
    [/primary_unit]
[/fire_event]
#enddef

#define WORLD_CONQUEST_TEK_BONUS_HERO_FOUND
[event]
    name=wct_bonus_hero_found
    first_time_only=no
    ## hero found and unit in bonus point face each other
    [animate_unit]
        flag=standing
        [filter]
            role=found
        [/filter]
        [facing]
            x,y=$unit.x,$unit.y
        [/facing]
    [/animate_unit]
    [animate_unit]
        flag=standing
        [filter]
            x,y=$unit.x,$unit.y
        [/filter]
        [facing]
            [filter]
                role=found
            [/filter]
        [/facing]
    [/animate_unit]
    [message]
        speaker=unit
        message={STR_BONUS_HERO_FOUND}
    [/message]
[/event]
#enddef

#define WORLD_CONQUEST_TEK_BONUS_PICKUP_POINT
[event]
    name=moveto
    first_time_only=no
    [filter]
        side=1,2,3
        [filter_location]
            find_in=bonus.point
        [/filter_location]
        ## unused bonus hexes are defined as 1,1 and bonuses aren't placed at y=1 anyhow
        [not]
            y=1
        [/not]
    [/filter]
    {WCT_BONUS_FIGURE_OUT_POINT bonus $x1 $y1 B}
    {VARIABLE_OP bonus_type rand 0..2}
    ## training found
    [if]
        [variable]
            name=bonus_type
            equals=2
        [/variable]
    [then]
        {VARIABLE bonus_trainer.grade 1}
        {VARIABLE bonus_trainer.type type}
        {VARIABLE bonus_trainer.advanced_chance 0}
        {FOREACH player[$side_number].training training_i}
            {VARIABLE_OP bonus_trainer.advanced_chance add $player[$side_number].training[$training_i].level}
        {NEXT training_i}
        ## dark training reduced chances
        {VARIABLE_OP bonus_training rand 4,4,5}
        {VARIABLE_OP bonus_training rand "0..$bonus_training"}
        ## each player training level give 4% of advancer trainer. Map 4 always give advanced trainer.
        {RANDOM 0..24}
        [if]
            [variable]
                name=bonus_trainer.advanced_chance
                greater_than=$random
            [/variable]
            [or]
                [variable]
                    name=scenario
                    greater_than=3
                [/variable]
            [/or]
        [then]
            {VARIABLE bonus_trainer.grade 2}
            {VARIABLE bonus_trainer.type advanced_type}
        [/then]
        [/if]
        ## dark training always extra grade after map2
        [if]
            [variable]
                name=bonus_training
                equals=5
            [/variable]
            [variable]
                name=scenario
                greater_than=2
            [/variable]
        [then]
            {VARIABLE bonus_trainer.grade  "$($scenario-1)"}
            {VARIABLE bonus_trainer.type advanced_type}
        [/then]
        [/if]
        ## generate trainer if  have sense 
        ## reroll if player would surpass maximun level
        [if]
            [variable]
                name=player[$side_number].training[$bonus_training].level
                less_than="$($wct.trainer[$bonus_training].grade.length-$bonus_trainer.grade)"
            [/variable]
        [then]
            {WCT_FOUND_HERO $wct.trainer[$bonus_training].$bonus_trainer.type|}
            [message]
                role=found        
                message=$wct.trainer[$bonus_training].dialogue
            [/message]
            [kill]
                role=found
            [/kill]
            {VARIABLE_OP player[$side_number].training[$bonus_training].level add $bonus_trainer.grade}
            {VARIABLE wct.trainer[$bonus_training].grade[$player[$side_number].training[$bonus_training].level].message[0].image {IMG_TRAINING_FOUND $wct.trainer[$bonus_training].image}}
            {VARIABLE wct.trainer[$bonus_training].grade[$player[$side_number].training[$bonus_training].level].message[0].speaker narrator}
            [insert_tag]
                name=message
                variable=wct.trainer[$bonus_training].grade[$player[$side_number].training[$bonus_training].level].message
            [/insert_tag]
            [sound]
                name=flail-miss.ogg
            [/sound]
            {CLEAR_VARIABLE bonus_training,bonus_trainer}
        [/then]
        [else]
            {VARIABLE_OP bonus_type rand 0..1}
        [/else]
        [/if]
    [/then]
    [/if]
    ## hero found
    [if]
        [variable]
            name=bonus_type
            equals=0
        [/variable]
    [then]
        {VARIABLE_OP type rand 0.."$($bonus.Heroes.length-1)"}
        {WCT_FOUND_HERO $bonus.Heroes[$type].type}
        [message]
            role=found       
            message=$bonus.Heroes[$type|].founddialogue
        [/message]
        ## unit use reply based in hero type found
        ## some types give alternative reply to some units
        {VARIABLE reply $bonus.Heroes[$type].reply}
        [if]
            {VARIABLE_CONDITIONAL reply equals $null}
        [then]
            {VARIABLE reply {STR_HERO_REPLY}}
        [/then]
        [/if]
        {FOREACH bonus.Heroes[$type].alt_reply reply_i}
            [if]
                [variable]
                    name=bonus.Heroes[$type].alt_reply[$reply_i].race
                    contains=$unit.race
                [/variable]
                [or]
                    [variable]
                        name=bonus.Heroes[$type].alt_reply[$reply_i].gender
                        equals=$unit.gender
                    [/variable]
                [/or]
            [then]
                {VARIABLE reply $bonus.Heroes[$type].alt_reply[$reply_i].reply}
            [/then]
            [/if]
        {NEXT reply_i}
        [message]
            speaker=unit
            message=$reply
        [/message]
        {CLEAR_VARIABLE bonus.Heroes[$type]}
        {CLEAR_VARIABLE type,reply}
        [modify_unit]
            [filter]
                role=found
            [/filter]
            role=hero	
        [/modify_unit]
    [/then]
    [/if]
    ## artifact found
    [if]
        [variable]
            name=bonus_type
            equals=1
        [/variable]
    [then]
        ## set item point, use slot reseverved for bonus
        {VARIABLE T "$($B+8)"}
        {VARIABLE items.point[$T].x $x1}
        {VARIABLE items.point[$T].y "$($y1-1)"}
        {VARIABLE_OP random rand 0.."$($bonus.artifact.length-1)"}
        {VARIABLE items.point[$T].type $bonus.artifact[$random].type}
        {CLEAR_VARIABLE bonus.artifact[$random]}
        [message]
            speaker=unit
            message={STR_BONUS_ITEM_FOUND}
        [/message]
        [message]
            speaker=narrator
            caption=$wct.artifact[$items.point[$T].type].name
            message=$wct.artifact[$items.point[$T].type].info+"
"+{STR_COLOR_BONUS $wct.artifact[$items.point[$T].type].description}
            image=$wct.artifact[$items.point[$T].type].icon
        [/message]
        [item]
            x,y=$items.point[$T].x,$items.point[$T].y
            image=$wct.artifact[$items.point[$T].type].icon
        [/item]
        {CLEAR_VARIABLE T}
    [/then]
    [/if]
    {CLEAR_VARIABLE bonus_type}
    ## remove bonus point
    {VARIABLE bonus.point[$B].x 1}
    {VARIABLE bonus.point[$B].y 1}
    {CLEAR_VARIABLE B}
    [remove_item]
        x,y=$x1,$y1
    [/remove_item]
    ## if image is windmill/campfire then terrain has to be changed
    [terrain]
        x,y=$x1,$y1
        [and]
            terrain=*^Wm,*^Ecf
        [/and]
        terrain=Gs
        layer=overlay
    [/terrain]
    [item]
        x,y=$x1,$y1
        image=scenery/rubble.png
    [/item]
[/event]
#enddef

#define WORLD_CONQUEST_TEK_BONUS_POINTS
[fire_event]
    name=wct_bonus_points
[/fire_event]
#enddef

#define WORLD_CONQUEST_TEK_BONUS_GENERATE_POINTS_EVENT
[event]
    name=wct_bonus_points
    {WORLD_CONQUEST_TEK_BONUS_GENERATE_POINTS_CODE}
[/event]
#enddef

#define WORLD_CONQUEST_TEK_BONUS_GENERATE_POINTS_CODE
## get the map dimensions to avoid bonus spawns on borders
[store_map_dimensions]
    variable=map_max
[/store_map_dimensions]
{REPEAT_IT $players point_i}
    ## look for eligible spots: no adjacent village or walls, not too close to a keep, and spaced fairly far apart
    [store_locations]
        variable=candidates
        terrain= G*,Hh,Uu,Uh,Dd,Ds,R*,Mm,Md,Ss,Hd,Hhd,Ww,Wwt,Wwg,Ds^Esd,Ur
        [and]
            ## just isolated mountains
            [not]
                terrain=M*
                [filter_adjacent_location]
                    terrain=M*
                [/filter_adjacent_location]
            [/not]
            ## no swamps near sand or water
            [not]
                terrain=Ss
                [filter_adjacent_location]
                    terrain=Wo*,Ww,Wwg,Wwt,Ds,Ds^Esd
                [/filter_adjacent_location]
            [/not]
            [not]
                x="$($map_max.width+1)"
            [/not]
            [not]
                y="$($map_max.height+1)"
            [/not]
            [not]
                x=0
            [/not]
            [not]
                y=0
            [/not]
            [not]
                y=1
            [/not]
            ## bug fix: item would be placed 1,1
            [not]
                x,y=1,2
            [/not]
            [not]
                terrain=K*^*
                radius="$(4+$scenario)"
            [/not]
            [not]
                terrain=Wo*,M*^Xm,Xu*,Q*,Mv,*^V*
                radius=1
            [/not]
            [not]
                [not]
                    x,y=1,1
                [/not]
                find_in=bonus.point
                radius="$(9+$scenario)"
            [/not]
        [/and]
    [/store_locations]	
    ## assuming there are eligible spots, pick one at random
    {VARIABLE_OP rand_c rand 0.."$($candidates.length-1)"}
    {VARIABLE bonus.point[$point_i].x $candidates[$rand_c].x}
    {VARIABLE bonus.point[$point_i].y $candidates[$rand_c].y}
    ## determine possible scenery images based on terrain
    [switch]
        variable=candidates[$rand_c].terrain
        [case]
            value=Re,Rd,Rb,Rr,Rrc
            {VARIABLE rand "well,signpost,rock_cairn,signpost2,rock_cairn2,monolith2,temple2,tent3"}
        [/case]
        [case]
            value=Ww,Wwt,Wwg
            {VARIABLE rand "ship1,ship2"}
        [/case]
        [case]
            value=Hh,Hhd
            {VARIABLE rand "temple,shelter,village,monolith1,monolith4"}
        [/case]
        [case]
            value=Mm,Md
            {VARIABLE rand "mine,mine,mine,mine,mine,doors,doors,doors,doors,temple3,temple4"}
        [/case]
        [case]
            value=Uu
            {VARIABLE rand "altar,coffin,bones,rock_cairn,trapdoor,well2,monolith2"}
        [/case]
        [case]
            value=Ur
            {VARIABLE rand "altar,bones,rock_cairn,well,monolith2,monolith3,tent1"}
        [/case]
        [case]
            value=Uh
            {VARIABLE rand "altar,coffin,bones,rock_cairn,trapdoor,monolith2,altar2"}
        [/case]
        [case]
            value=Ds,Ds^Esd
            {VARIABLE rand "rock1,rock4,bones,rock1,tent2,tent1,rock4,burial"}
        [/case]
        [case]
            value=Dd
            {VARIABLE rand "rock4,bones,rock1,tent2,tent1,burial"}
        [/case]
        [case]
            value=Hd
            {VARIABLE rand "rock1b,rock4b,bones,tent2,tent1,rock4,burial,temple"}
        [/case]
        [case]
            value=Ss
            {VARIABLE rand "bones,rock3,rock3,burial,lilies,bones"}
        [/case]
        [else]
            {VARIABLE rand "well,temple,tent2,tent1,village,monolith3,burial"}
        [/else]
    [/switch]
    ## chance of rock cairn on isolated hills
    [if]
        [have_location]
            terrain=Hh,Hhd
            x=$candidates[$rand_c].x
            y=$candidates[$rand_c].y
            [filter_adjacent_location]
                terrain=H*^*
                count=0
            [/filter_adjacent_location]
        [/have_location]
    [then]
        {VARIABLE rand "rock_cairn,$rand"}
    [/then]
    [/if]
    ## chance of dolmen on grass not near forest
    [if]
        [have_location]
            terrain=G*
            x=$candidates[$rand_c].x
            y=$candidates[$rand_c].y
            [filter_adjacent_location]
                terrain=*^F*
                count=0
            [/filter_adjacent_location]
        [/have_location]
    [then]
        {VARIABLE rand "monolith3b,$rand"}
    [/then]
    [/if]
    ## chance of temple in hills near mountain
    [if]
        [have_location]
            terrain=Hh,Hhd
            x=$candidates[$rand_c].x
            y=$candidates[$rand_c].y
            [filter_adjacent_location]
                terrain=M*^*
            [/filter_adjacent_location]
        [/have_location]
    [then]
        {VARIABLE rand "temple4,$rand"}
    [/then]
    [/if]
    ## chances of detritus and lilies on some swamps
    [if]
        [have_location]
            terrain=Ss
            x=$candidates[$rand_c].x
            y=$candidates[$rand_c].y
            [filter_adjacent_location]
                terrain=*^F*,C*^*,K*^*
                count=0
            [/filter_adjacent_location]
        [/have_location]
    [then]
        {VARIABLE rand "detritus,detritus2,lilies2,lilies2,$rand"}
    [/then]
    [/if]
    ## chances of buildings next to road
    [if]
        [variable]
            name=bonus.theme
            not_equals=volcanic,clayey
        [/variable]
        [have_location]
            terrain=G*,Hh*
            x=$candidates[$rand_c].x
            y=$candidates[$rand_c].y
            [filter_adjacent_location]
                terrain=R*^*,W*^Bsb*
                count=2-6
            [/filter_adjacent_location]
            [filter_adjacent_location]
                terrain=*^*F
                count=0
            [/filter_adjacent_location]
            [and]
                terrain=*^Vh,*^Vhh,*^Ve,*^Vl,*^Vhc,*^Vd,*^Vy*,*^Vz*
                radius=7
            [/and]
        [/have_location]
    [then]
        {VARIABLE rand "rock_cairn,temple2_g,tent3_g,$rand"}
    [/then]
    [/if]
    ## high chances of windmill and oak surronded by flat
    [if]
        [have_location]
            terrain=Gg,Gs,Gll
            x=$candidates[$rand_c].x
            y=$candidates[$rand_c].y
            [filter_adjacent_location]
                terrain= G*,R*,R*^Em,G*^Efm,Wwf,G*^Em,G*^Eff,*^Gvs,W*^B*,Ce,Ch
                count=6
            [/filter_adjacent_location]
        [/have_location]
    [then]
        {VARIABLE rand "windmill,windmill,windmill,windmill,windmill,windmill,windmill,oak1,oak2,oak3,oak4,oak5,oak6,oak7,$rand"}
    [/then]
    [/if]
    ## remove chances of ships on river/lake coast for lilies
    [if]
        [have_location]
            terrain=Ww,Wwt,Wwg
            x=$candidates[$rand_c].x
            y=$candidates[$rand_c].y
            [not]
                {WCT_MAP_FILTER_OCEANIC}
            [/not]
            [filter_adjacent_location]
                terrain=W*^*,Ai
                count=0-4
            [/filter_adjacent_location]
        [/have_location]
    [then]
        {VARIABLE rand "lilies"}
    [/then]
    [/if]
    ## different meaning for roads in some maps
    [if]
        [variable]
            name=bonus.theme
            equals=clayey
        [/variable]
    [then]
        [if]
            [have_location]
                terrain=R*
                x=$candidates[$rand_c].x
                y=$candidates[$rand_c].y
            [/have_location]
        [then]
            {VARIABLE rand "well,temple,tent2,tent1,village,monolith3,burial"}
        [/then]
        [/if]
    [/then]
    [/if]
    [if]
        [variable]
            name=bonus.theme
            equals=volcanic
        [/variable]
    [then]
        [if]
            [have_location]
                terrain=Rd,Rb
                x=$candidates[$rand_c].x
                y=$candidates[$rand_c].y
            [/have_location]
        [then]
            {VARIABLE rand "bones,rock_cairn,well,monolith2,tent1,tent1,tent2,monolith3,well,rock_cairn,rock_cairn2,monolith2,temple,monolith3b,monolith1b,monolith4b"}
        [/then]
        [/if]
        [if]
            [have_location]
                terrain=Ur
                x=$candidates[$rand_c].x
                y=$candidates[$rand_c].y
            [/have_location]
        [then]
            {VARIABLE rand "bones,rock_cairn,well,monolith2,tent1,monolith3,well,rock_cairn2,monolith2,temple,monolith1b,monolith4b"}
        [/then]
        [/if]
    [/then]
    [/if]
    ## high chances of lighthouse near deepwater
    [if]
        [have_location]
            terrain=Wo*
            [and]
                terrain=!,Ww*,U*,Ss
                x=$candidates[$rand_c].x
                y=$candidates[$rand_c].y
                radius=2
                [filter_radius]
                    terrain=!,M*^*,H*^*,X*,*^F*
                [/filter_radius]
            [/and]
            [and]
                {WCT_MAP_FILTER_OCEANIC}
            [/and]
        [/have_location]
    [then]
        {VARIABLE rand "lighthouse,lighthouse,lighthouse,$rand"}
    [/then]
    [/if]
    ## chance of lighthouse near reef
    [if]
        [have_location]
            terrain=Wwr*
            [and]
                terrain=!,Ww*,U*,Ss
                x=$candidates[$rand_c].x
                y=$candidates[$rand_c].y
                radius=2
                [filter_radius]
                    terrain=!,M*^*,H*^*,X*,*^F*
                [/filter_radius]
            [/and]
            [and]
                {WCT_MAP_FILTER_OCEANIC}
            [/and]
        [/have_location]
    [then]
        {VARIABLE rand "lighthouse,$rand"}
    [/then]
    [/if]
    ## high chances of light signal on cliff near deepwater
    [if]
        [have_location]
            terrain=Wo*,Wwr*
            [and]
                terrain=Hh,Hhd,Mm,Md
                x=$candidates[$rand_c].x
                y=$candidates[$rand_c].y
                radius=2
                [filter_radius]
                    terrain=!,M*^*,H*^*,X*,*^F*
                [/filter_radius]
            [/and]
            [filter_adjacent_location]
                terrain=Ww*^*,Ds*^*,S*^*
            [/filter_adjacent_location]
            [and]
                {WCT_MAP_FILTER_OCEANIC}
            [/and]
        [/have_location]
    [then]
        {VARIABLE rand "campfire,campfire,lighthouse,lighthouse,lighthouse,$rand"}
    [/then]
    [/if]
    ## improve chances of light signal near water
    [if]
        [have_location]
            terrain=W*^*
            [filter_adjacent_location]
                x=$candidates[$rand_c].x
                y=$candidates[$rand_c].y
            [/filter_adjacent_location]
        [/have_location]
    [then]
        [if]
            [variable]
                name=rand
                contains=lighthouse
            [/variable]
        [then]
            {VARIABLE rand "lighthouse,lighthouse,lighthouse,lighthouse,$rand"}
        [/then]
        [/if]
        [if]
            [variable]
                name=rand
                contains=campfire
            [/variable]
        [then]
            {VARIABLE rand "campfire,campfire,campfire,$rand"}
        [/then]
        [/if]
    [/then]
    [/if]
    ## chances of tower on dessert far from village
    [if]
        [have_location]
            terrain=Dd,Hd
            x=$candidates[$rand_c].x
            y=$candidates[$rand_c].y
            [and]
                [not]
                    terrain=*^V*
                    radius=5
                [/not]
            [/and]
        [/have_location]
    [then]
        {VARIABLE rand "rock1b,rock4b,$rand"}
    [/then]
    [/if]
    ## chance of outpost in sands 
    [if]
        [have_location]
            terrain=Ds,Hd,Dd
            x=$candidates[$rand_c].x
            y=$candidates[$rand_c].y
            [filter_adjacent_location]
                terrain=D*^*,Hd,G*,R*,Ur
                adjacent=se
                count=1
            [/filter_adjacent_location]
            [filter_adjacent_location]
                terrain=D*^*,H*^*,G*^*,R*,Ur,M*^*
                adjacent=nw,sw,n,s,ne
                count=5
            [/filter_adjacent_location]
            [filter_adjacent_location]
                terrain=D*^*,Hd*^*
                count=1-6
            [/filter_adjacent_location]
        [/have_location]
    [then]
        {VARIABLE rand "outpost,$rand"}
    [/then]
    [/if]
    ## chances of dead oak in desolated
    [if]
        [have_location]
            terrain=Dd
            x=$candidates[$rand_c].x
            y=$candidates[$rand_c].y
            [filter_adjacent_location]
                terrain=Dd,Ds*^*,Hd,S*
                count=4-6
            [/filter_adjacent_location]
            [filter_adjacent_location]
                terrain=*^F*,C*^*,K*^*
                count=0
            [/filter_adjacent_location]
            [or]
                terrain=Ds,Rd
                x=$candidates[$rand_c].x
                y=$candidates[$rand_c].y
                [filter_adjacent_location]
                    terrain=Dd,Ds*^*,Hd,S*,Rd
                    count=6
                [/filter_adjacent_location]
                [and]
                    [not]
                        terrain=W*^*
                        radius=2
                    [/not]
                [/and]
            [/or]
        [/have_location]
    [then]
        {VARIABLE rand "detritus_b,detritus_b,detritus_b,detritus_b,detritus2_b,detritus2_b,detritus2_b,detritus2_b,$rand"}
    [/then]
    [/if]
    ## pick random scenery object from our list and place it on the map. also label it for ease of finding
    {VARIABLE_OP rand rand $rand}
    ## change terrain for windmill or campfire, else place image
    [if]
        [variable]
            name=rand
            equals=windmill
        [/variable]
    [then]
        [terrain]
            x=$bonus.point[$point_i].x
            y=$bonus.point[$point_i].y
            terrain=$candidates[$rand_c].terrain|^Wm
        [/terrain]
    [/then]
    [else]
        [if]
            [variable]
                name=rand
                equals=campfire
            [/variable]
        [then]
            [terrain]
                x=$bonus.point[$point_i].x
                y=$bonus.point[$point_i].y
                terrain=$candidates[$rand_c].terrain|^Ecf
            [/terrain]
        [/then]
        [else]
            [item]
                x=$bonus.point[$point_i].x
                y=$bonus.point[$point_i].y
                image=$bonus.img.$rand|
            [/item]
        [/else]
        [/if]
    [/else]
    [/if]
    ## determine possible location names based on image
    {VARIABLE rand $bonus.str.$rand|}
    {VARIABLE_OP bonus.label.location rand $rand}
    ## add random name to create label
    {WCT_RANDOM_NAME bonus.label.name}
    [label]
        x,y=$bonus.point[$point_i].x,$bonus.point[$point_i].y
        text={STR_COLOR_BONUS {STR_BONUS_LABEL}}
    [/label]
    {CLEAR_VARIABLE candidates}
{NEXT point_i}
{CLEAR_VARIABLE map_max,rand_c,rand}
#enddef


